@using Core.DTOs
@model AuthorDTO

@{
    ViewData["Title"] = "Author Details";
}

<h2 class="text-center my-4">@ViewData["Title"]</h2>

<div class="card shadow-lg">
    <div class="card-header bg-primary text-white">
        <h4>@Model.Name</h4>
    </div>
    <div class="card-body">
        <p><strong>Nationality:</strong> @Model.Nationality</p>
        <p><strong>Birth Date:</strong> @Model.BirthDate.ToShortDateString()</p>
        <p><strong>Biography:</strong> @Model.Biography</p>

        @if (Model.Books.Any())
        {
            <h5 class="mt-3">Published Books</h5>
            <ul class="list-group">
                @foreach (var book in Model.Books)
                {
                    <li class="list-group-item">
                        <strong>@book.Title</strong> - @book.PublicationYear
                    </li>
                }
            </ul>
        }
        else
        {
            <p class="text-muted">This author has no books listed yet.</p>
        }
    </div>
    <div class="card-footer">
        @if (!User.IsInRole("ViewAuthorsBooks") && !User.HasClaim("AuthorsEdit", "false"))
        {
            <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-primary">Edit</a>
        }
        <a asp-action="Index" class="btn btn-secondary">Back to list</a>
    </div>
</div>
